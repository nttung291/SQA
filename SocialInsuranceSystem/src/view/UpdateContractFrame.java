/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.CompulsoryContractDAO;
import dao.Connection;
import dao.CustomerDAO;
import dao.HometownDAO;
import dao.VoluntaryContractDAO;
import java.awt.Color;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import model.Account;
import model.CompulsoryContract;
import model.Customer;
import model.Hometown;
import model.VoluntaryContract;

/**
 *
 * @author nttungg
 */
public class UpdateContractFrame extends javax.swing.JFrame {
  
    private Customer customer;
    /**
     * Creates new form RegisterContractFrame
     */
    public UpdateContractFrame() {
        initComponents();
        Connection.createConnection();
        setLocationRelativeTo(null); 
        this.setTitle("Update Contract");
    }

    public void setCustomer(Customer customer) {
        this.customer = customer;
    }

    public Customer getCustomer() {
        return customer;
    }
    
    UIManager um = new UIManager();
    private void showError(String message) {
        um.put("OptionPane.messageForeground", Color.red);
        JOptionPane.showMessageDialog(null, message, "Message", JOptionPane.ERROR_MESSAGE);
    }
    
    private int showSuccess(String message) {
        um.put("OptionPane.messageForeground", Color.BLUE);
        int result = JOptionPane.showOptionDialog(null, message, "Message", JOptionPane.DEFAULT_OPTION ,JOptionPane.INFORMATION_MESSAGE, null,null,null);
        return result;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        cbCities = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tfEmail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        tfPhoneNumber = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        cbPaymentDuration = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        tfCompany = new javax.swing.JTextField();
        lb_company = new javax.swing.JLabel();
        tfSalary = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        jList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jList2);

        jMenu3.setText("jMenu3");

        jMenu4.setText("jMenu4");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("jCheckBoxMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cbCities.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "An Giang", "Bà Rịa - Vũng Tàu", "Bắc Giang", "Bắc Kạn", "Bạc Liêu", "Bắc Ninh", "Bến Tre", "Bình Định", "Bình Dương", "Bình Phước", "Bình Thuận", "Cà Mau", "Cao Bằng", "Đắk Lắk", "Đắk Nông", "Điện Biên", "Đồng Nai", "Đồng Tháp", "Gia Lai", "Hà Giang", "Hà Nam", "Hà Tĩnh", "Hải Dương", "Hậu Giang", "Hòa Bình", "Hưng Yên", "Khánh Hòa", "Kiên Giang", "Cần Thơ", "Đà Nẵng", "Hải Phòng", "Hà Nội", "TP HCM", "Kon Tum", "Lai Châu", "Lâm Đồng", "Lạng Sơn", "Lào Cai", "Long An", "Nam Định", "Nghệ An", "Ninh Bình", "Ninh Thuận", "Phú Thọ", "Quảng Bình", "Quảng Nam", "Quảng Ngãi", "Quảng Ninh", "Quảng Trị", "Sóc Trăng", "Sơn La", "Tây Ninh", "Thái Bình", "Thái Nguyên", "Thanh Hóa", "Thừa Thiên Huế", "Tiền Giang", "Trà Vinh", "Tuyên Quang", "Vĩnh Long", "Vĩnh Phúc", "Yên Bái", "Phú Yên" }));

        jLabel4.setText("Hometown :");

        jLabel8.setText("Email: ");

        tfEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfEmailActionPerformed(evt);
            }
        });

        jLabel9.setText("Phone number :");

        jLabel10.setText("Payment duration :");

        jButton1.setText("Continue");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel11.setText("Update  Contract");

        cbPaymentDuration.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month", "Year", " " }));

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        lb_company.setText("Company code :");

        tfSalary.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfSalaryKeyReleased(evt);
            }
        });

        jLabel3.setText("Salary :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(291, 291, 291))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(100, 100, 100)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lb_company)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(jLabel8)
                                .addComponent(jLabel9))
                            .addGap(19, 19, 19)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tfCompany, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                                .addComponent(tfSalary)
                                .addComponent(cbCities, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(91, 91, 91)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tfPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbPaymentDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel11)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_company))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbCities, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(tfPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(cbPaymentDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void initData(Customer customer) {
        if (customer.compulsoryContract != null) {
            lb_company.setVisible(true);
            tfCompany.setVisible(true);
        } else if (customer.voluntaryContract != null) {
            lb_company.setVisible(false);
            tfCompany.setVisible(false);
        }
    }
    
    private boolean checkEmptyBlank() {
        if (tfSalary.getText().equals("") || tfEmail.getText().equals("") 
                || tfCompany.getText().equals("")
                || tfPhoneNumber.getText().equals("")) return false;
        return true;
    }
    
    
    private boolean checkPhoneNumber() {
        try {
            Double.parseDouble(tfPhoneNumber.getText());
        } catch (Exception e) {
            return false;
        }
        if (!tfPhoneNumber.getText().substring(0, 2).equals("84")) return false;
        return true;
    }
    
    
    public static final Pattern VALID_EMAIL_ADDRESS_REGEX = 
    Pattern.compile("^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$", Pattern.CASE_INSENSITIVE);

    public static boolean checkEmail(String emailStr) {
        Matcher matcher = VALID_EMAIL_ADDRESS_REGEX .matcher(emailStr);
        return matcher.find();
    }
    
   private boolean checkSalary() {
        ArrayList<Hometown> mCitys = HometownDAO.selectAllHometown();
        Hometown hometown = mCitys.get(cbCities.getSelectedIndex());
        Float salary;
        try {
            salary = Float.parseFloat(tfSalary.getText());
        } catch (Exception e) {
            showError("Salary is wrong format");
           
            return false;
        }
       
        if (hometown.section == 1 && (salary < 4472600 || salary > 29800000)){
            
            showError("Salary field must in section 1 range from 4.472.600 dong/month to 29.800.000 dong/month, please check your input again");
            return false;
        }
        if (hometown.section == 2 && (salary < 3969700 || salary > 29800000)) {
           
            showError("Salary field must in section 2 range from 3.969.700 dong/month to 29.800.000 dong/month, please check your input again");
            return false;
        }
        if (hometown.section == 3 && (salary < 3477500 || salary > 29800000)) {
            
            showError("Salary field must in section 2 range from 3.477.500 dong/month to 29.800.000 dong/month, please check your input again");
            return false;
        }
        if (hometown.section == 4 && (salary < 3124400 || salary > 29800000)) {
           
            showError("Salary field must in section 2 range from 3.124.400 dong/month to 29.800.000 dong/month, please check your input again");
            return false;
        }
        return true;
    }
   
    private boolean checkCompany() {
        if (customer.voluntaryContract != null) return true;
        ArrayList<Hometown> mCitys = HometownDAO.selectAllHometown();
        Hometown hometown = mCitys.get(cbCities.getSelectedIndex());
        try {
            Double.parseDouble(tfCompany.getText());
        } catch (Exception e) {
            return false;
        }
        if (tfCompany.getText().length() != 10) return false;
        if (Integer.parseInt(tfCompany.getText().substring(0, 2)) != (hometown.ID)) return false;
        return true;
    }
    
    private void tfEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfEmailActionPerformed

   public void updateContract(Customer inCustomer) {
       int row = -1;
        if (inCustomer.compulsoryContract != null) {
            CompulsoryContract compulsoryContract = inCustomer.compulsoryContract;
            compulsoryContract.companyCode = tfCompany.getText();
            compulsoryContract.state = 3;
            int updateCus = CustomerDAO.updateCompulsoryCustomer(inCustomer);
            int updateCon = 0;
            if (updateCus == 1){
                updateCon = CompulsoryContractDAO.updateCompulsoryContract(compulsoryContract);
            }
            if (updateCon == 1) {
                row = 1;
            }
        } else if (inCustomer.voluntaryContract != null) {
            VoluntaryContract voluntaryContract = inCustomer.voluntaryContract;
            voluntaryContract.state = 3;
            int updateCus = CustomerDAO.updateCompulsoryCustomer(inCustomer);
            int updateCon = 0;
            if (updateCus == 1){
                updateCon = VoluntaryContractDAO.updateVoluntaryContract(voluntaryContract);
            }
            if (updateCon == 1) {
                row = 1;
            }
        }
        if (row != 0 && row != -1) {
            if (showSuccess("Your request is being processed. Please wait 1-2 days for your confirmation. Thank you for using our insurance service!") == JOptionPane.OK_OPTION) {
                this.setVisible(false);
                CustomerMain customerMain = new CustomerMain();
                customerMain.setAcc(this.getCustomer().account);
                customerMain.setVisible(true);
            }
        }
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (!checkEmptyBlank()) {
            showError("Informations can not be blank");
           
        } else if (!checkPhoneNumber()){
             showError("Phone Number is wrong format");
           
        } else if (!checkCompany()) {
             showError("Company is wrong format");     
            
        } else if(!checkEmail(tfEmail.getText())){
            showError("Email is wrong format");     
            
        } else if (!checkSalary()) {
            
        } else {
            int result = JOptionPane.showConfirmDialog(null, "Are you sure want to cancel your contract? This action may affect your future benefit in insurance", "Message", JOptionPane.PLAIN_MESSAGE);
            if (result == JOptionPane.OK_OPTION) {
                ArrayList<Hometown> mCitys = HometownDAO.selectAllHometown();
                Hometown city = mCitys.get(cbCities.getSelectedIndex());
                Customer insCustomer = customer;
                insCustomer.hometown = city;
                insCustomer.phoneNo = tfPhoneNumber.getText();
                insCustomer.email = tfEmail.getText();
                String salary = tfSalary.getText().replaceAll("[,]","");
                insCustomer.salary = Float.parseFloat(salary);
  
                updateContract(insCustomer);
            }
        }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
        CustomerMain customerMain = new CustomerMain();
        customerMain.setAcc(this.getCustomer().account);
        customerMain.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tfSalaryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSalaryKeyReleased
        try {
            String result = tfSalary.getText().replaceAll("[,]","");
            String salary = String.format("%,d", Long.parseLong(result));
            tfSalary.setText(salary);
        } catch (Exception e) {
           
        }
    }//GEN-LAST:event_tfSalaryKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateContractFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateContractFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateContractFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateContractFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateContractFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbCities;
    private javax.swing.JComboBox<String> cbPaymentDuration;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lb_company;
    private javax.swing.JTextField tfCompany;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfPhoneNumber;
    private javax.swing.JTextField tfSalary;
    // End of variables declaration//GEN-END:variables
}
